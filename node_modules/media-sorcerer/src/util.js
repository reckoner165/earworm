export function average(times, weights = []) {
    // Prevent deviding by zero
    if (times.length === 0) {
        return 0;
    }

    let total = 0;
    let length = 0;

    for (let i = 0; i < times.length; i++) {
        const weight = weights[i] || 1;
        length += weight;
        total += times[i] * weight;
    }

    return total / length;
}

// @see https://gist.github.com/IceCreamYou/6ffa1b18c4c8f6aeaad2
export function percentile(arr, p) {
    arr.sort();

    if (arr.length === 0) {
        return 0;
    }

    if (p <= 0) {
        return arr[0];
    }

    if (p >= 1) {
        return arr[arr.length - 1];
    }

    const index = arr.length * p;
    const lower = Math.floor(index);
    const upper = lower + 1;
    const weight = index % 1;

    if (upper >= arr.length) {
        return arr[lower];
    }

    return (arr[lower] * (1 - weight)) + (arr[upper] * weight);
}

export function median(times) {
    times.sort((a, b) => a - b);

    const half = Math.floor(times.length / 2);

    if (times.length % 2) {
        return times[half];
    }

    return (times[half - 1] + times[half]) / 2.0;
}

export function parseResponseHeaders(string) {
    if (!string) {
        return {};
    }

    return string.split('\n').reduce((obj, header) => {
        const colon = header.indexOf(':');
        const key = header.substring(0, colon);
        const value = header.substring(colon + 1);

        if (typeof key !== 'undefined' && typeof value !== 'undefined') {
            obj[key.trim().toLowerCase()] = value.trim();
        }

        return obj;
    }, {});
}
